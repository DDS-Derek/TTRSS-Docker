version: "3"
services:
  service.rss:
    image: ddsderek/ttrss:latest
    ports:
      - 181:80
    environment:
      - SELF_URL_PATH=http://localhost:181/ # please change to your own domain
      - "DB_HOST=database.postgres"
      - DB_PORT=5432
      - DB_USER=ttrss
      - DB_PASS=ttrss
      - DB_NAME=ttrss
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
    volumes:
      - ./feed-icons:/var/www/feed-icons/
    networks:
      - public_access
      - service_only
      - database_only
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "-I", "http://localhost:80"]
    depends_on:
      - "database.postgres"

  service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page
    image: wangqiru/mercury-parser-api:latest
    networks:
      - public_access
      - service_only
    restart: unless-stopped

  service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page
    image: wangqiru/opencc-api-server:latest
    environment:
      - NODE_ENV=production
    networks:
      - service_only
    restart: unless-stopped

  database.postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=ttrss # feel free to change the password
      - POSTGRES_USER=ttrss
      - POSTGRES_DB=ttrss
      - PGUSER=ttrss
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host
    networks:
      - database_only
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  public_access: # Provide the access for ttrss UI
  service_only: # Provide the communication network between services only
    internal: true
  database_only: # Provide the communication between ttrss and database only
    internal: true
